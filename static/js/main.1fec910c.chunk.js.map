{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isErrorImgUrl","isErrorImdbUrl","titleHandler","value","target","setState","textareaHandler","imageUrlHandler","imdbUrlHandler","imdbIdHandler","submitHandler","e","preventDefault","pattern","isError","test","props","addMovie","this","onSubmit","htmlFor","onChange","id","type","placeholder","required","rows","cols","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fec910c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorImgUrl: false,\n    isErrorImdbUrl: false,\n  };\n\n  titleHandler = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value,\n    });\n  };\n\n  textareaHandler = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      description: value,\n    });\n  };\n\n  imageUrlHandler = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      imgUrl: value,\n      isErrorImgUrl: false,\n    });\n  };\n\n  imdbUrlHandler = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      imdbUrl: value,\n      isErrorImdbUrl: false,\n    });\n  };\n\n  imdbIdHandler = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      imdbId: value,\n    });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    let isError = false;\n\n    if (!pattern.test(imgUrl)) {\n      isError = true;\n\n      this.setState({\n        isErrorImgUrl: true,\n      });\n    }\n\n    if (!pattern.test(imdbUrl)) {\n      isError = true;\n\n      this.setState({\n        isErrorImdbUrl: true,\n      });\n    }\n\n    if (!isError) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isErrorImgUrl,\n      isErrorImdbUrl,\n    } = this.state;\n\n    return (\n      <>\n        <h1 className=\"movie__header\">Add Your Movie</h1>\n        <form onSubmit={this.submitHandler} className=\"form\">\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              onChange={this.titleHandler}\n              value={title}\n              className=\"form__input\"\n              id=\"title\"\n              type=\"text\"\n              placeholder=\"movie title\"\n              required\n            />\n          </label>\n          <label htmlFor=\"description\">\n            Description:\n            <textarea\n              onChange={this.textareaHandler}\n              value={description}\n              rows=\"5\"\n              cols=\"40\"\n              className=\"form__input\"\n              id=\"description\"\n              type=\"text\"\n              placeholder=\"describe your movie\"\n            />\n          </label>\n          <label htmlFor=\"imgUrl\">\n            Image Url:\n            <input\n              onChange={this.imageUrlHandler}\n              value={imgUrl}\n              className=\"form__input form__input--url\"\n              id=\"imgUrl\"\n              type=\"text\"\n              placeholder=\"put movie image url\"\n              required\n            />\n          </label>\n          {isErrorImgUrl\n              && (\n                <div className=\"form__error\">\n                  Put correct URL\n                </div>\n              )}\n          <label htmlFor=\"imdbUrl\">\n            IMDB Url:\n            <input\n              onChange={this.imdbUrlHandler}\n              value={imdbUrl}\n              className=\"form__input form__input--url\"\n              id=\"imdbUrl\"\n              type=\"text\"\n              placeholder=\"put imdb id url\"\n              required\n            />\n          </label>\n          {isErrorImdbUrl\n              && (\n                <div className=\"form__error\">\n                  Put correct URL\n                </div>\n              )}\n          <label htmlFor=\"imdbId\">\n            IMDB Id:\n            <input\n              onChange={this.imdbIdHandler}\n              value={imdbId}\n              className=\"form__input\"\n              id=\"imdbId\"\n              type=\"text\"\n              placeholder=\"put imdb id\"\n              required\n            />\n          </label>\n          <button className=\"form__button\" type=\"submit\">Add Movie</button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, { ...movie }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}